{"version":3,"sources":["App.js","index.js"],"names":["data","require","handleDragStart","cardId","laneId","console","log","handleDragEnd","sourceLaneId","targetLaneId","App","state","boardData","lanes","setEventBus","eventBus","setState","completeCard","publish","type","card","id","title","label","description","addCard","shouldReceiveNewData","nextData","handleCardAdd","dir","a","this","getBoard","response","Promise","resolve","className","onClick","style","margin","editable","onCardAdd","draggable","onDataChange","eventBusHandle","Component","ReactDOM","render","document","getElementById"],"mappings":"s9FAKMA,EAAOC,EAAQ,KAEfC,EAAkB,SAACC,EAAQC,GAC/BC,QAAQC,IAAI,gBACZD,QAAQC,IAAR,kBAAuBH,IACvBE,QAAQC,IAAR,kBAAuBF,KAGnBG,EAAgB,SAACJ,EAAQK,EAAcC,GAC3CJ,QAAQC,IAAI,cACZD,QAAQC,IAAR,kBAAuBH,IACvBE,QAAQC,IAAR,wBAA6BE,IAC7BH,QAAQC,IAAR,wBAA6BG,KA2FhBC,E,4MAvFbC,MAAQ,CAAEC,UAAW,CAAEC,MAAO,K,EAE9BC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAED,c,EAclBE,aAAe,WACb,EAAKN,MAAMI,SAASG,QAAQ,CAC1BC,KAAM,WACNf,OAAQ,YACRgB,KAAM,CACJC,GAAI,OACJC,MAAO,WACPC,MAAO,UACPC,YAAa,uBAGjB,EAAKb,MAAMI,SAASG,QAAQ,CAC1BC,KAAM,cACNf,OAAQ,UACRD,OAAQ,U,EAIZsB,QAAU,WACR,EAAKd,MAAMI,SAASG,QAAQ,CAC1BC,KAAM,WACNf,OAAQ,UACRgB,KAAM,CACJC,GAAI,WACJC,MAAO,oBACPC,MAAO,UACPC,YAAa,6B,EAKnBE,qBAAuB,SAACC,GACtBtB,QAAQC,IAAI,2BACZD,QAAQC,IAAIqB,I,EAGdC,cAAgB,SAACR,EAAMhB,GACrBC,QAAQC,IAAR,iCAAsCF,IACtCC,QAAQwB,IAAIT,I,+FAjDd,4BAAAU,EAAA,sEACyBC,KAAKC,WAD9B,OACQC,EADR,OAEEF,KAAKf,SAAS,CAAEJ,UAAWqB,IAF7B,gD,4EAKA,WACE,OAAO,IAAIC,SAAQ,SAACC,GAClBA,EAAQnC,Q,oBA6CZ,WACE,OACE,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,cACb,kDAEF,yBAAKA,UAAU,aACb,4BAAQC,QAASN,KAAKd,aAAcqB,MAAO,CAAEC,OAAQ,IAArD,qBAGA,4BAAQF,QAASN,KAAKN,QAASa,MAAO,CAAEC,OAAQ,IAAhD,eAGA,kBAAC,IAAD,CACEC,UAAQ,EACRC,UAAWV,KAAKH,cAChB5B,KAAM+B,KAAKpB,MAAMC,UACjB8B,WAAS,EACTC,aAAcZ,KAAKL,qBACnBkB,eAAgBb,KAAKjB,YACrBZ,gBAAiBA,EACjBK,cAAeA,U,GAhFTsC,a,OCflBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d99ebc44.chunk.js","sourcesContent":["import './App.css'\n\nimport React, { Component } from 'react'\nimport Board from 'react-trello'\n\nconst data = require('./data.json')\n\nconst handleDragStart = (cardId, laneId) => {\n  console.log('drag started')\n  console.log(`cardId: ${cardId}`)\n  console.log(`laneId: ${laneId}`)\n}\n\nconst handleDragEnd = (cardId, sourceLaneId, targetLaneId) => {\n  console.log('drag ended')\n  console.log(`cardId: ${cardId}`)\n  console.log(`sourceLaneId: ${sourceLaneId}`)\n  console.log(`targetLaneId: ${targetLaneId}`)\n}\n\nclass App extends Component {\n  state = { boardData: { lanes: [] } }\n\n  setEventBus = (eventBus) => {\n    this.setState({ eventBus })\n  }\n\n  async componentWillMount() {\n    const response = await this.getBoard()\n    this.setState({ boardData: response })\n  }\n\n  getBoard() {\n    return new Promise((resolve) => {\n      resolve(data)\n    })\n  }\n\n  completeCard = () => {\n    this.state.eventBus.publish({\n      type: 'ADD_CARD',\n      laneId: 'COMPLETED',\n      card: {\n        id: 'Milk',\n        title: 'Buy Milk',\n        label: '15 mins',\n        description: 'Use Headspace app',\n      },\n    })\n    this.state.eventBus.publish({\n      type: 'REMOVE_CARD',\n      laneId: 'PLANNED',\n      cardId: 'Milk',\n    })\n  }\n\n  addCard = () => {\n    this.state.eventBus.publish({\n      type: 'ADD_CARD',\n      laneId: 'BLOCKED',\n      card: {\n        id: 'Ec2Error',\n        title: 'EC2 Instance Down',\n        label: '30 mins',\n        description: 'Main EC2 instance down',\n      },\n    })\n  }\n\n  shouldReceiveNewData = (nextData) => {\n    console.log('New card has been added')\n    console.log(nextData)\n  }\n\n  handleCardAdd = (card, laneId) => {\n    console.log(`New card added to lane ${laneId}`)\n    console.dir(card)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h3>React Trello Demo</h3>\n        </div>\n        <div className=\"App-intro\">\n          <button onClick={this.completeCard} style={{ margin: 5 }}>\n            Complete Buy Milk\n          </button>\n          <button onClick={this.addCard} style={{ margin: 5 }}>\n            Add Blocked\n          </button>\n          <Board\n            editable\n            onCardAdd={this.handleCardAdd}\n            data={this.state.boardData}\n            draggable\n            onDataChange={this.shouldReceiveNewData}\n            eventBusHandle={this.setEventBus}\n            handleDragStart={handleDragStart}\n            handleDragEnd={handleDragEnd}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}